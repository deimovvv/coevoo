/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 bicho8.glb
*/

import React, { useRef } from 'react'
import { shaderMaterial, useGLTF } from '@react-three/drei'
import * as THREE from "three";
import fragmentShader from '../../shaders/fragment.glsl'
import vertexShader from '../../shaders/vertex.glsl'
import { useFrame, extend } from "@react-three/fiber";


const BackgroundMaterial = shaderMaterial(
  {
    time: 0,
    uDisplacement: 0,

  },
  vertexShader,
  fragmentShader

)


extend({ BackgroundMaterial }) 


function Model(props) {
  const { nodes, materials } = useGLTF('/bicho9.glb')

  const mat = useRef();

  

  useFrame((state, delta) => {
    mat.current.time += delta;

    
    
  });

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.mesh_0.geometry} material={materials['Material.001']} position={[0,-0.05,1]} scale={0.5} rotation={[-1.5,0,0]} > 
      <backgroundMaterial 
      ref={mat}
      side={THREE.DoubleSide}
    /> 
      </mesh>
    </group>
  )
}

useGLTF.preload('/bicho9.glb')


export default Model
